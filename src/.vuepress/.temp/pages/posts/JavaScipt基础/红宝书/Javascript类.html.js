export const data = JSON.parse("{\"key\":\"v-31f424c2\",\"path\":\"/posts/JavaScipt%E5%9F%BA%E7%A1%80/%E7%BA%A2%E5%AE%9D%E4%B9%A6/Javascript%E7%B1%BB.html\",\"title\":\"类\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"类 ES6引入新的class关键字，是一个新的基础语法糖。虽然表面上看起来支持正式的面向对象编程，但实际上背后使用的仍然是原型和构造函数的概念。 定义类的两种方式：类声明和类表达式。 // 类声明 class Person {} // 类表达式 const Animal = class {};\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/posts/JavaScipt%E5%9F%BA%E7%A1%80/%E7%BA%A2%E5%AE%9D%E4%B9%A6/Javascript%E7%B1%BB.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"饮东的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"类\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"类 ES6引入新的class关键字，是一个新的基础语法糖。虽然表面上看起来支持正式的面向对象编程，但实际上背后使用的仍然是原型和构造函数的概念。 定义类的两种方式：类声明和类表达式。 // 类声明 class Person {} // 类表达式 const Animal = class {};\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-02-04T13:15:39.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-02-04T13:15:39.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"类\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2023-02-04T13:15:39.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"类构造函数\",\"slug\":\"类构造函数\",\"link\":\"#类构造函数\",\"children\":[{\"level\":3,\"title\":\"继承\",\"slug\":\"继承\",\"link\":\"#继承\",\"children\":[]}]}],\"git\":{\"createdTime\":1675516539000,\"updatedTime\":1675516539000,\"contributors\":[{\"name\":\"yinjindong\",\"email\":\"yinjindong@newrank.cn\",\"commits\":1}]},\"readingTime\":{\"minutes\":2.85,\"words\":855},\"filePathRelative\":\"posts/JavaScipt基础/红宝书/Javascript类.md\",\"localizedDate\":\"2023年2月4日\",\"excerpt\":\"<h1> 类</h1>\\n<p>ES6引入新的class关键字，是一个新的基础语法糖。虽然表面上看起来支持正式的面向对象编程，但实际上<strong>背后使用的仍然是原型和构造函数</strong>的概念。</p>\\n<p>定义类的两种方式：类声明和类表达式。</p>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-ext=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 类声明</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 类表达式</span>\\n<span class=\\\"token keyword\\\">const</span> Animal <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
