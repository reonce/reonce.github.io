export const data = JSON.parse("{\"key\":\"v-86a668e2\",\"path\":\"/posts/JavaScipt%E5%9F%BA%E7%A1%80/Array.from%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BB.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"先看下MDN官方介绍: Array.from() 方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。 创建一个新的、浅拷贝的数组，这里最开始很难理解这句话。“新的”或许代表着深拷贝？ 但是为什么又说是创建浅拷贝呢。 这里放一段让我对Array.from浅拷贝疑惑的代码 const arr = [1,2,3]; const copyArr = Array.from(arr); copyArr[0] = 8; console.log(copyArr); // [8, 2, 3] console.log(arr); // [1,2,3]\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/posts/JavaScipt%E5%9F%BA%E7%A1%80/Array.from%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BB.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"饮东的博客\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"先看下MDN官方介绍: Array.from() 方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。 创建一个新的、浅拷贝的数组，这里最开始很难理解这句话。“新的”或许代表着深拷贝？ 但是为什么又说是创建浅拷贝呢。 这里放一段让我对Array.from浅拷贝疑惑的代码 const arr = [1,2,3]; const copyArr = Array.from(arr); copyArr[0] = 8; console.log(copyArr); // [8, 2, 3] console.log(arr); // [1,2,3]\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":2.43,\"words\":729},\"filePathRelative\":\"posts/JavaScipt基础/Array.from深度解读.md\",\"excerpt\":\"<p>先看下MDN官方介绍:\\n<strong>Array.from() 方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。</strong>\\n创建一个新的、浅拷贝的数组，这里最开始很难理解这句话。“新的”或许代表着深拷贝？ 但是为什么又说是创建浅拷贝呢。\\n这里放一段让我对<code>Array.from</code><strong>浅拷贝</strong>疑惑的代码</p>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-ext=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> arr <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> copyArr <span class=\\\"token operator\\\">=</span> Array<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">from</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\ncopyArr<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>copyArr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// [8, 2, 3]</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// [1,2,3]</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
