export const data = JSON.parse("{\"key\":\"v-73358dfa\",\"path\":\"/posts/JS%E8%BF%9B%E9%98%B6-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/Redux%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html\",\"title\":\"Redux实现原理\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"Redux实现原理 状态管理器 Redux是一个状态管理器，与react不强相关，只是react中使用的多。它也可以应用于其他框架。由React核心开发者Dan开源开发，缺点槽点很多，但这并不妨碍它是目前最流行的react状态管理解决方案。 简单的状态管理实现 redux是一个状态管理器，状态指的就是数据，比如计数器中的count。 let state = { \\tcount: 1 }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/posts/JS%E8%BF%9B%E9%98%B6-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/Redux%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"饮东的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Redux实现原理\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Redux实现原理 状态管理器 Redux是一个状态管理器，与react不强相关，只是react中使用的多。它也可以应用于其他框架。由React核心开发者Dan开源开发，缺点槽点很多，但这并不妨碍它是目前最流行的react状态管理解决方案。 简单的状态管理实现 redux是一个状态管理器，状态指的就是数据，比如计数器中的count。 let state = { \\tcount: 1 }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-02-04T13:15:39.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-02-04T13:15:39.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Redux实现原理\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2023-02-04T13:15:39.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"状态管理器\",\"slug\":\"状态管理器\",\"link\":\"#状态管理器\",\"children\":[{\"level\":3,\"title\":\"简单的状态管理实现\",\"slug\":\"简单的状态管理实现\",\"link\":\"#简单的状态管理实现\",\"children\":[]},{\"level\":3,\"title\":\"有计划的状态管理器\",\"slug\":\"有计划的状态管理器\",\"link\":\"#有计划的状态管理器\",\"children\":[]},{\"level\":3,\"title\":\"进阶的状态管理-多文件协作\",\"slug\":\"进阶的状态管理-多文件协作\",\"link\":\"#进阶的状态管理-多文件协作\",\"children\":[]}]}],\"git\":{\"createdTime\":1675516539000,\"updatedTime\":1675516539000,\"contributors\":[{\"name\":\"yinjindong\",\"email\":\"yinjindong@newrank.cn\",\"commits\":1}]},\"readingTime\":{\"minutes\":6.9,\"words\":2069},\"filePathRelative\":\"posts/JS进阶-源码阅读/Redux实现原理.md\",\"localizedDate\":\"2023年2月4日\",\"excerpt\":\"<h1> Redux实现原理</h1>\\n<h2> 状态管理器</h2>\\n<p>Redux是一个状态管理器，与react不强相关，只是react中使用的多。它也可以应用于其他框架。由React核心开发者Dan开源开发，缺点槽点很多，但这并不妨碍它是目前最流行的react状态管理解决方案。</p>\\n<h3> 简单的状态管理实现</h3>\\n<p>redux是一个状态管理器，状态指的就是数据，比如计数器中的count。</p>\\n<div class=\\\"language-javascript line-numbers-mode\\\" data-ext=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token literal-property property\\\">count</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
