(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{263:function(t,s,e){"use strict";e.r(s);var a=e(5),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"第十五章-dom扩展-15-1-15-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第十五章-dom扩展-15-1-15-3"}},[t._v("#")]),t._v(" 第十五章 DOM扩展 15.1-15.3")]),t._v(" "),e("h2",{attrs:{id:"_15-1-selectors-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-selectors-api"}},[t._v("#")]),t._v(" 15.1 Selectors API")]),t._v(" "),e("p",[t._v("Selectors API 是 W3C 推荐标准，规定了浏览器原生支持的、通过 CSS 查询 DOM 的 API")]),t._v(" "),e("h3",{attrs:{id:"_15-1-1-queryselector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-1-queryselector"}},[t._v("#")]),t._v(" 15.1.1 querySelector()")]),t._v(" "),e("p",[t._v("这个方法可以传入 CSS 选择符参数，例如：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过标签元素查找")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" body "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 id 查找")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDiv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#myDiv'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 类名 查找")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDiv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.box'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("这个方法会返回找到的第一个元素，未找到则返回 null")]),t._v(" "),e("h3",{attrs:{id:"_15-1-2-queryselectorall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-2-queryselectorall"}},[t._v("#")]),t._v(" 15.1.2 querySelectorAll()")]),t._v(" "),e("p",[t._v("和 querySelector() 传参相同，它会返回一个符合条件的 NodeList 集合，未找到则会返回一个空的 NodeList 实例")]),t._v(" "),e("h3",{attrs:{id:"_15-1-3-matches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-3-matches"}},[t._v("#")]),t._v(" 15.1.3 matches()")]),t._v(" "),e("p",[t._v("根据 CSS选择符 来判断是否能找到符合条件的元素，返回一个布尔值，可以用来做前置判断。")]),t._v(" "),e("h2",{attrs:{id:"_15-2-元素遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-元素遍历"}},[t._v("#")]),t._v(" 15.2 元素遍历")]),t._v(" "),e("p",[t._v("由于 IE9 以前不会把元素节点的空格当成空白节点，其他浏览器会。因此又专门出了个叫做 Element Traversal API。 定义了一下五个属性：")]),t._v(" "),e("ul",[e("li",[t._v("childElementCount  子元素数量（不含文本节点和注释）")]),t._v(" "),e("li",[t._v("firstElementChild 指向第一个 Element 类型的子元素")]),t._v(" "),e("li",[t._v("lastElementChild")]),t._v(" "),e("li",[t._v("previousElementSibling 执行前一个 Element 类型的兄弟节点")]),t._v(" "),e("li",[t._v("nextElementSibling")])]),t._v(" "),e("p",[t._v("之前的 Element 遍历需要加一行 nodeType 类型的判断，现在用这个 API 则可以之间遍历了。")])])}),[],!1,null,null,null);s.default=r.exports}}]);