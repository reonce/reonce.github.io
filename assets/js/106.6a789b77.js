(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{319:function(_,v,e){"use strict";e.r(v);var t=e(5),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"跨域执行、http简单复杂请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域执行、http简单复杂请求"}},[_._v("#")]),_._v(" 跨域执行、HTTP简单复杂请求")]),_._v(" "),e("h1",{attrs:{id:"跨域问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题"}},[_._v("#")]),_._v(" 跨域问题")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://reonce.github.io/2022/06/11/%E8%B7%A8%E5%9F%9F%E8%AF%A6%E8%A7%A3/",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://reonce.github.io/2022/06/11/跨域详解/"),e("OutboundLink")],1)]),_._v(" "),e("h1",{attrs:{id:"跨域的请求在服务端会不会真正执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域的请求在服务端会不会真正执行"}},[_._v("#")]),_._v(" "),e("strong",[_._v("跨域的请求在服务端会不会真正执行？")])]),_._v(" "),e("h2",{attrs:{id:"跨域请求的拦截"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域请求的拦截"}},[_._v("#")]),_._v(" "),e("strong",[_._v("跨域请求的拦截")])]),_._v(" "),e("p",[_._v("这个问题的答案是看情况。")]),_._v(" "),e("p",[_._v("跨域是浏览器同源策略的影响，对于服务端来说是不受影响的，因此服务端正常来说是正常执行的。")]),_._v(" "),e("p",[_._v("但是，以上是针对的"),e("strong",[_._v("简单请求。")])]),_._v(" "),e("p",[_._v("还有一种"),e("strong",[_._v("复杂请求")]),_._v("，它会正常请求之前发送一个"),e("strong",[_._v("预检请求")])]),_._v(" "),e("h3",{attrs:{id:"会处理的原因之一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#会处理的原因之一"}},[_._v("#")]),_._v(" 会处理的原因之一：")]),_._v(" "),e("p",[_._v("用 "),e("code",[_._v("CORS")]),_._v(" 去解决跨域的大概原理就是客户端会通过服务端返回的一些 "),e("code",[_._v("Header")]),_._v(" 去判断该请求是否允许跨域：")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdT4I7sZCLd4Wm7u8s6nlD5ibPfCzWzxBAWdM1jYvXGHT5MBMNYgibxBzz0CpLzBBwGbVq9ibcU6I5Vhw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdT4I7sZCLd4Wm7u8s6nlD5ibPfCzWzxBAWdM1jYvXGHT5MBMNYgibxBzz0CpLzBBwGbVq9ibcU6I5Vhw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"),e("OutboundLink")],1)]),_._v(" "),e("p",[_._v("比如，"),e("code",[_._v("Access-Control-Allow-Origin")]),_._v(" 告诉客户端允许请求在哪些 "),e("code",[_._v("Origin")]),_._v(" 下被发送，这些 "),e("code",[_._v("Header")]),_._v(" 一般都是我们配在 "),e("code",[_._v("Server")]),_._v(" 上的。")]),_._v(" "),e("p",[_._v("回到上面的问题，如果请求没发出去，这个 "),e("code",[_._v("Header")]),_._v(" 是怎么被带回来的呢？浏览器又咋知道 "),e("code",[_._v("Server")]),_._v(" 允许请求在哪些 "),e("code",[_._v("Origin")]),_._v(" 下跨域发送呢？")]),_._v(" "),e("p",[_._v("所以，我们又明确了一个信息：请求一定是先发出去，在返回来的时候被浏览器拦截了，如果请求是有返回值的，会被浏览器隐藏掉。")]),_._v(" "),e("h2",{attrs:{id:"预检请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预检请求"}},[_._v("#")]),_._v(" "),e("strong",[_._v("预检请求")])]),_._v(" "),e("p",[_._v("那这么说，请求既然被发出去了，服务端又不会拦截，所以一定会被执行喽？")]),_._v(" "),e("p",[_._v("那当然不是，我们再回来把 "),e("code",[_._v("CORS")]),_._v(" 这张图放大来看：")]),_._v(" "),e("p",[_._v("我们发现，在发送真正的请求之前，浏览器会先发送一个 "),e("code",[_._v("Preflight")]),_._v(" 请求，也就是我们常说的预检请求，它的方法为 "),e("code",[_._v("OPTIONS")]),_._v("。")]),_._v(" "),e("p",[_._v("这也就是为什么有的时候我们明明只发了一个请求，在 "),e("code",[_._v("Network")]),_._v(" 里却看到两个：")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdT4I7sZCLd4Wm7u8s6nlD5ibtTnSAddDibkmW8Q4kM8UnD4Xzm5NAL8VOibiaNVt3DN003OUiaicXBYO1zA/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdT4I7sZCLd4Wm7u8s6nlD5ibtTnSAddDibkmW8Q4kM8UnD4Xzm5NAL8VOibiaNVt3DN003OUiaicXBYO1zA/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"),e("OutboundLink")],1)]),_._v(" "),e("p",[_._v("预检请求有一个很重要的作用就是 "),e("code",[_._v("询问")]),_._v(" 服务端是不是允许这次请求，如果当前请求是个跨域的请求，你可以理解为："),e("code",[_._v("询问")]),_._v(" 服务端是不是允许请求在当前域下跨域发送。")]),_._v(" "),e("p",[_._v("当然，它还有其他的作用，比如 "),e("code",[_._v("询问")]),_._v(" 服务端支持哪些 HTTP 方法。")]),_._v(" "),e("h2",{attrs:{id:"预检的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预检的过程"}},[_._v("#")]),_._v(" "),e("strong",[_._v("预检的过程")])]),_._v(" "),e("p",[_._v("当预检请求到达服务端时，服务端是不会真正执行这个请求的逻辑的，只会在这个请求上返回一些 "),e("code",[_._v("HTTP Header")]),_._v("，以此来告诉客户端是不是要发送真正的请求。")]),_._v(" "),e("p",[_._v("如果服务端告诉客户端，请求是允许被发送的，那真正的请求才会发出去。")]),_._v(" "),e("p",[_._v("比如：我在 "),e("code",[_._v("a.com")]),_._v(" 这个 "),e("code",[_._v("origin")]),_._v(" 下，发送了 "),e("code",[_._v("conardli.top")]),_._v(" 这个域名的请求。")]),_._v(" "),e("p",[_._v("那么浏览器会先向  "),e("code",[_._v("conardli.top")]),_._v("  发送一个预检，预检请求不会真正执行这个域名的请求，而是返回了一些 "),e("code",[_._v("CORS Header")]),_._v("，比如 "),e("code",[_._v("Access-Control-Allow-Origin: a.com")])]),_._v(" "),e("p",[_._v("这时候浏览器发现， "),e("code",[_._v("conardli.top")]),_._v(" 的请求是允许在 "),e("code",[_._v("a.com")]),_._v(" 下发送的，才会真正发出请求。这时服务端才会真正执行请求接口的逻辑。")]),_._v(" "),e("p",[_._v("那么，所有的请求都会有预检吗？当然不是。")]),_._v(" "),e("h2",{attrs:{id:"简单请求和复杂请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单请求和复杂请求"}},[_._v("#")]),_._v(" "),e("strong",[_._v("简单请求和复杂请求")])]),_._v(" "),e("p",[_._v("某些请求不会触发 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Preflight_request",target:"_blank",rel:"noopener noreferrer"}},[_._v("CORS 预检请求"),e("OutboundLink")],1),_._v("。MDN称这样的请求为"),e("code",[_._v("简单请求")])]),_._v(" "),e("p",[_._v("浏览器判定请求是否为简单请求要"),e("strong",[_._v("同时满足以下四个条件")]),_._v("：")]),_._v(" "),e("ul",[e("li",[_._v("使用下列方法之一：\n"),e("ul",[e("li",[e("code",[_._v("GET")])]),_._v(" "),e("li",[e("code",[_._v("HEAD")])]),_._v(" "),e("li",[e("code",[_._v("POST")])])])]),_._v(" "),e("li",[_._v("只使用了如下的安全 "),e("code",[_._v("Header")]),_._v("，不得人为设置其他 "),e("code",[_._v("Header")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("text/plain")])]),_._v(" "),e("li",[e("code",[_._v("multipart/form-data")])]),_._v(" "),e("li",[e("code",[_._v("application/x-www-form-urlencoded")])]),_._v(" "),e("li",[e("code",[_._v("Accept")])]),_._v(" "),e("li",[e("code",[_._v("Accept-Language")])]),_._v(" "),e("li",[e("code",[_._v("Content-Language")])]),_._v(" "),e("li",[e("code",[_._v("Content-Type")]),_._v(" 的值仅限于下列三者之一：\n"),e("ul",[e("li",[_._v("text/plain")]),_._v(" "),e("li",[_._v("multipart/form-data")]),_._v(" "),e("li",[_._v("application/x-www-form-urlencoded")])])])])]),_._v(" "),e("li",[_._v("请求中的任意 "),e("code",[_._v("XMLHttpRequest")]),_._v(" 对象均没有注册任何事件监听器；"),e("code",[_._v("XMLHttpRequest")]),_._v(" 对象可以使用 "),e("code",[_._v("XMLHttpRequest.upload")]),_._v(" 属性访问。")]),_._v(" "),e("li",[_._v("请求中没有使用 "),e("code",[_._v("ReadableStream")]),_._v(" 对象。")])]),_._v(" "),e("p",[_._v("所以，如果你发送的是一个简单请求，这个请求不管是不是会受到跨域的限制，只要发出去了，一定会在服务端被执行，浏览器只是隐藏了返回值而已。")]),_._v(" "),e("p",[_._v("如果是复杂请求，未通过预检则不进行处理，通过则要处理。")]),_._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" "),e("strong",[_._v("总结")])]),_._v(" "),e("p",[_._v("最后来总结下要点：")]),_._v(" "),e("ul",[e("li",[_._v("简单请求：不管是否跨域，只要发出去了，一定会到达服务端并被执行，浏览器只会隐藏返回值")]),_._v(" "),e("li",[_._v("复杂请求：先发预检，预检不会真正执行业务逻辑，预检通过后才会发送真正请求并在服务端被执行")])])])}),[],!1,null,null,null);v.default=r.exports}}]);