(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{297:function(t,a,r){"use strict";r.r(a);var v=r(5),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"预估业务错误引发的思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#预估业务错误引发的思考"}},[t._v("#")]),t._v(" 预估业务错误引发的思考")]),t._v(" "),r("h2",{attrs:{id:"需求背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#需求背景"}},[t._v("#")]),t._v(" 需求背景")]),t._v(" "),r("p",[t._v("一个树形多选组件，当子节点全部选中的时候，只传父节点的值，否则传子节点")]),t._v(" "),r("h2",{attrs:{id:"错误判断"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误判断"}},[t._v("#")]),t._v(" 错误判断")]),t._v(" "),r("p",[t._v("因为在ng-zorro中，这个逻辑是默认的，于是我很爽快的答应了后端这样做。但是在antd react版本中，子节点全选中会把所有子节点和父节点都传出，和需求商讨的方案是不同的，于是我需要自己实现。")]),t._v(" "),r("h2",{attrs:{id:"技术实现分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术实现分析"}},[t._v("#")]),t._v(" 技术实现分析")]),t._v(" "),r("p",[t._v("在选中或取消某个节点时，可以拿到当前节点的树结构和对应关系。")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("当节点作为父节点时，很容易去判断去掉它的子节点。")])]),t._v(" "),r("li",[r("p",[t._v("当节点作为子节点时，"),r("strong",[t._v("难点")]),t._v("来了，需要判断它的兄弟节点及它兄弟节点的全部子节点是否全部选中，然后如果全中，在用当前节点的父节点走作为父节点的逻辑还要再走作为子节点的逻辑")])])]),t._v(" "),r("h2",{attrs:{id:"思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[t._v("#")]),t._v(" 思考")]),t._v(" "),r("p",[t._v("在充分调研技术之前，不要马虎的答应，那样不够沉稳，并且容易给自己带来麻烦。")]),t._v(" "),r("p",[t._v("当陷入预估错误带来的后果时，有两种解决方案：")]),t._v(" "),r("ol",[r("li",[t._v("自己解决。拼脑力体力解决掉问题，为”吹出去的牛逼“付出代价")]),t._v(" "),r("li",[t._v("重新商讨，求后端改方案。需要好声好气的去找后端同学在商讨方案")])]),t._v(" "),r("p",[t._v("两种方案都是被动的局面，十分窘迫。")]),t._v(" "),r("p",[r("strong",[t._v("其实这些”坏结果”完全是可避免的，如果我认真查看了antd的树组件逻辑，开始就和后端商量好，后端来做数据逻辑处理，就可以避免这个窘境了。")])]),t._v(" "),r("p",[t._v("2022.7.25")])])}),[],!1,null,null,null);a.default=_.exports}}]);